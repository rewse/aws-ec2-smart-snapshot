#!/bin/sh
###############################################################################
# @(#) AWS EC2 Smart Snapshot
#
# MIT License
#
# Copyright (c) 2016 Tats Shibata
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
###############################################################################
# {{{ get_mount_path()

freeze_device() {
  virt_device=`echo $device | sed 's!/dev/sd!/dev/xvd!'`
  mount_paths=`grep $virt_device /etc/fstab | awk '{print $2}'`

  if [ "$mount_paths" == "" ]; then
    vg_name=`pvs | grep $virt_device | awk '{print $2}'`
    mount_paths=`grep $vg_name /etc/fstab | awk '{print $2}'`
  fi

  if [ "$mount_paths" == "" ]; then
    echo "<Warning> Can't recognize the paths $device mounting" >&2
  fi

  for mount_path in $mount_paths; do
    echo "Freezing $mount_path..."
    xfs_freeze -f $mount_path
  done
}

# }}}
# {{{ unfreeze_device()

unfreeze_device() {
  for mount_path in $mount_paths; do
    echo "Unfreezing $mount_path..."
    xfs_freeze -u $mount_path
  done
}

# }}}
# {{{ create_snapshot()

create_snapshot() {
  my_instance_id=`GET http://169.254.169.254/latest/meta-data/instance-id`

  volume_ids=`aws ec2 describe-volumes \
    --filter \
      Name=attachment.instance-id,Values=$my_instance_id \
      Name=tag-key,Values="Do Smart Snapshot" \
      Name=tag-value,Values=yes \
    --query "Volumes[*].[VolumeId]" \
    --output text`

  hostname=`hostname`

  for volume_id in $volume_ids; do
    device=`aws ec2 describe-volumes \
      --filter Name=volume-id,Values=$volume_id \
      --query "Volumes[*].Attachments[*].[Device]" \
      --output text`

    freeze_device

    ecno "Taking a snapshot..."

    snapshot_id=`aws ec2 create-snapshot \
      --volume-id $volume_id \
      --description "Created by aws-ec2-smart-snapshot($hostname) from $volume_id($device)" \
      --query "[SnapshotId]" \
      --output text`

    unfreeze_device

    aws ec2 create-tags \
      --resources $snapshot_id \
      --tags \
        Key=Name,Value="$hostname $device" \
        Key=CreatedBy,Value=aws-ec2-smart-snapshot
  done
}

# }}}
# {{{ Main

create_snapshot

# }}}
